(()=>{"use strict";const e=document.querySelector("[data-current-score]"),t=document.querySelector("[data-boll]"),r=document.querySelector("[data-change-points]"),n=document.querySelector("[data-enter-letter]"),o={keyDown:!1},c={start:!1,stop:!1,restart:!1},s=(t.offsetWidth,t.offsetHeight,{current:100,changePoints:0}),a={letter:"",charCode:0};function i(t){switch(t){case"correct":!function(){const t=Math.floor(6*Math.random()+5);s.changePoints=t,s.current+=t,e.innerText=String(s.current),r.innerText=String(`+${s.changePoints}`)}();break;case"wrong":!function(){const t=Math.floor(6*Math.random()+20);s.changePoints=-t,s.current-=t,e.innerText=String(s.current),r.innerText=String(s.changePoints)}();break;default:!function(){const t=Math.floor(6*Math.random()+10);s.changePoints=-t,s.current-=t,e.innerText=String(s.current),r.innerText=String(s.changePoints)}()}s.current>200?d("win"):s.current<=0&&d("lose")}function u(){!function(){const e=Math.floor(26*Math.random()+65);a.letter=String.fromCharCode(e),a.charCode=+e}(),o.keyDown=!1,n.innerText=a.letter}function d(t){switch(c.start=!1,c.stop=!0,c.restart=!1,t){case"win":e.classList.add("current__score-win"),e.classList.remove("current__score-lose"),e.innerText=`You won ${s.current} points`;break;case"lose":e.classList.remove("current__score-win"),e.classList.add("current__score-lose"),e.innerText="You lose"}n.innerText="",r.innerText="",s.current=100,s.changePoints=0}document.addEventListener("keydown",(e=>{c.start&&(e.keyCode===a.charCode?(r.classList.add("changer__points-wrong"),r.classList.add("changer__points-correct"),i("correct")):(r.classList.add("changer__points-wrong"),r.classList.remove("changer__points-correct"),i("wrong")),u())})),c.start=!0,e.innerText=String(s.current),e.classList.remove("current__score-win"),e.classList.remove("current__score-lose"),u()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,